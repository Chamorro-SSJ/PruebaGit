/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.awt.Color;
import java.awt.Font;
import javax.swing.ImageIcon;
import javax.swing.JColorChooser;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

//fornite hoy?
/**
 *
 * @author helde
 */
public class Main extends javax.swing.JFrame {


    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    txtPapel.getDocument().addDocumentListener(new DocumentListener() {
        @Override
        public void insertUpdate(DocumentEvent e) {
            contarPalabras();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            contarPalabras();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
            contarPalabras(); // Este no se usa mucho en JTextArea, pero lo incluimos
        }
    });


        
        ImageIcon icono = new ImageIcon(getClass().getResource("/img/papel.png"));
        this.setIconImage(icono.getImage());
        

    }
    private void contarPalabras() {
    String texto = txtPapel.getText().trim();

    if (texto.isEmpty()) {
        txtPalabras.setText("0");
        return;
    }

    String[] palabras = texto.split("\\s+");
    txtPalabras.setText(String.valueOf(palabras.length));
}

   private void aplicarEstiloGlobal() {
    int estilo = Font.PLAIN;  // Siempre empezamos en PLAIN

    if (chbxBold.isSelected()) {
        estilo += Font.BOLD;
    }

    if (chbxItalic.isSelected()) {
        estilo += Font.ITALIC;
    }

    // Usar el mismo nombre de fuente y tamaño actual
    Font fuenteActual = txtPapel.getFont();
    Font nuevaFuente = new Font(fuenteActual.getFamily(), estilo, fuenteActual.getSize());

    txtPapel.setFont(nuevaFuente);
}
      private void aplicarEstiloGlobalCheck() {
    int estilo = Font.PLAIN;  // Siempre empezamos en PLAIN

    if (bxBold.isSelected()) {
        estilo += Font.BOLD;
    }

    if (bxItalic.isSelected()) {
        estilo += Font.ITALIC;
    }

    // Usar el mismo nombre de fuente y tamaño actual
    Font fuenteActual = txtPapel.getFont();
    Font nuevaFuente = new Font(fuenteActual.getFamily(), estilo, fuenteActual.getSize());

    txtPapel.setFont(nuevaFuente);
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlArriba = new javax.swing.JPanel();
        lblFont = new javax.swing.JLabel();
        cmbxFont = new javax.swing.JComboBox<>();
        lblSize = new javax.swing.JLabel();
        cmbxSize = new javax.swing.JComboBox<>();
        lblFontStyle = new javax.swing.JLabel();
        pnliN = new javax.swing.JPanel();
        bxBold = new javax.swing.JCheckBox();
        bxItalic = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPapel = new javax.swing.JTextArea();
        pnlAbajo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtPalabras = new javax.swing.JTextField();
        mnbr = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmnNuevo = new javax.swing.JMenuItem();
        jmnCerrar = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        chbxBold = new javax.swing.JCheckBoxMenuItem();
        chbxItalic = new javax.swing.JCheckBoxMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jmnColor = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlArriba.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblFont.setText("Font");

        cmbxFont.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Arial", "Times New Roman", "Calibri ", "Century" }));
        cmbxFont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbxFontActionPerformed(evt);
            }
        });

        lblSize.setText("Size");

        cmbxSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10", "11", "12", "14", "16", "18" }));
        cmbxSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbxSizeActionPerformed(evt);
            }
        });

        lblFontStyle.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblFontStyle.setText("Font Style");

        pnliN.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        bxBold.setText("Bold");
        bxBold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bxBoldActionPerformed(evt);
            }
        });

        bxItalic.setText("Italic");
        bxItalic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bxItalicActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnliNLayout = new javax.swing.GroupLayout(pnliN);
        pnliN.setLayout(pnliNLayout);
        pnliNLayout.setHorizontalGroup(
            pnliNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnliNLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bxBold)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bxItalic)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnliNLayout.setVerticalGroup(
            pnliNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnliNLayout.createSequentialGroup()
                .addGroup(pnliNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bxBold)
                    .addComponent(bxItalic))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlArribaLayout = new javax.swing.GroupLayout(pnlArriba);
        pnlArriba.setLayout(pnlArribaLayout);
        pnlArribaLayout.setHorizontalGroup(
            pnlArribaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlArribaLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(lblFont, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbxFont, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(lblSize, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbxSize, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addComponent(pnliN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlArribaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblFontStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
        );
        pnlArribaLayout.setVerticalGroup(
            pnlArribaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlArribaLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(lblFontStyle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlArribaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlArribaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblFont)
                        .addComponent(cmbxFont, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblSize)
                        .addComponent(cmbxSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnliN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        txtPapel.setColumns(20);
        txtPapel.setRows(5);
        jScrollPane1.setViewportView(txtPapel);

        pnlAbajo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Recuentro de Palabras");

        txtPalabras.setEditable(false);

        javax.swing.GroupLayout pnlAbajoLayout = new javax.swing.GroupLayout(pnlAbajo);
        pnlAbajo.setLayout(pnlAbajoLayout);
        pnlAbajoLayout.setHorizontalGroup(
            pnlAbajoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAbajoLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPalabras, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlAbajoLayout.setVerticalGroup(
            pnlAbajoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAbajoLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(pnlAbajoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtPalabras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        jmnNuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jmnNuevo.setText("Nuevo");
        jmnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnNuevoActionPerformed(evt);
            }
        });
        jMenu1.add(jmnNuevo);

        jmnCerrar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jmnCerrar.setText("Cerrar");
        jmnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnCerrarActionPerformed(evt);
            }
        });
        jMenu1.add(jmnCerrar);

        mnbr.add(jMenu1);

        jMenu2.setText("Style");

        chbxBold.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        chbxBold.setText("Bold");
        chbxBold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbxBoldActionPerformed(evt);
            }
        });
        jMenu2.add(chbxBold);

        chbxItalic.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        chbxItalic.setText("Italic");
        chbxItalic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbxItalicActionPerformed(evt);
            }
        });
        jMenu2.add(chbxItalic);

        mnbr.add(jMenu2);

        jMenu3.setText("Color");

        jmnColor.setText("Color");
        jmnColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnColorActionPerformed(evt);
            }
        });
        jMenu3.add(jmnColor);

        mnbr.add(jMenu3);

        setJMenuBar(mnbr);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlArriba, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlAbajo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlArriba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlAbajo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnNuevoActionPerformed
    txtPapel.setText("");               // Limpia el texto
    txtPapel.setBackground(Color.WHITE); // Fondo blanco para hoja en blanco
    txtPapel.setEnabled(true); 
    }//GEN-LAST:event_jmnNuevoActionPerformed

    private void chbxBoldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbxBoldActionPerformed
     aplicarEstiloGlobal();
    }//GEN-LAST:event_chbxBoldActionPerformed

    private void jmnColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnColorActionPerformed
        Color nuevoColor = JColorChooser.showDialog(this, "Elige un color", txtPapel.getForeground());

if (nuevoColor != null) {
    txtPapel.setForeground(nuevoColor); // cambia el color de todo el texto

}
    
    }//GEN-LAST:event_jmnColorActionPerformed

    private void jmnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnCerrarActionPerformed
        txtPapel.setText("");                 // Limpia el texto
        txtPapel.setBackground(Color.GRAY);  // Fondo gris para "sin hoja"
        txtPapel.setEnabled(false);
    }//GEN-LAST:event_jmnCerrarActionPerformed

    private void chbxItalicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbxItalicActionPerformed
       aplicarEstiloGlobal();
    }//GEN-LAST:event_chbxItalicActionPerformed

    private void bxBoldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bxBoldActionPerformed
       aplicarEstiloGlobalCheck() ;
    }//GEN-LAST:event_bxBoldActionPerformed

    private void bxItalicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bxItalicActionPerformed
       aplicarEstiloGlobalCheck() ;
    }//GEN-LAST:event_bxItalicActionPerformed

    private void cmbxFontActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbxFontActionPerformed
    String fuenteSeleccionada = (String) cmbxFont.getSelectedItem();

    // Mantenemos el estilo (negrita/cursiva) y el tamaño actual
    Font fuenteActual = txtPapel.getFont();
    int estilo = fuenteActual.getStyle();
    int tamaño = fuenteActual.getSize();

    Font nuevaFuente = new Font(fuenteSeleccionada, estilo, tamaño);
    txtPapel.setFont(nuevaFuente);
    }//GEN-LAST:event_cmbxFontActionPerformed

    private void cmbxSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbxSizeActionPerformed
    String tamañoSeleccionado = (String) cmbxSize.getSelectedItem();
    int tamaño = Integer.parseInt(tamañoSeleccionado);

    // Mantenemos la fuente y el estilo actuales
    Font fuenteActual = txtPapel.getFont();
    String nombreFuente = fuenteActual.getFamily();
    int estilo = fuenteActual.getStyle();

    Font nuevaFuente = new Font(nombreFuente, estilo, tamaño);
    txtPapel.setFont(nuevaFuente);
    }//GEN-LAST:event_cmbxSizeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox bxBold;
    private javax.swing.JCheckBox bxItalic;
    private javax.swing.JCheckBoxMenuItem chbxBold;
    private javax.swing.JCheckBoxMenuItem chbxItalic;
    private javax.swing.JComboBox<String> cmbxFont;
    private javax.swing.JComboBox<String> cmbxSize;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem jmnCerrar;
    private javax.swing.JMenuItem jmnColor;
    private javax.swing.JMenuItem jmnNuevo;
    private javax.swing.JLabel lblFont;
    private javax.swing.JLabel lblFontStyle;
    private javax.swing.JLabel lblSize;
    private javax.swing.JMenuBar mnbr;
    private javax.swing.JPanel pnlAbajo;
    private javax.swing.JPanel pnlArriba;
    private javax.swing.JPanel pnliN;
    private javax.swing.JTextField txtPalabras;
    private javax.swing.JTextArea txtPapel;
    // End of variables declaration//GEN-END:variables
}
